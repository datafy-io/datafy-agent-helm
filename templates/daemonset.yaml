apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: datafy-agent
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/part-of: datafy-agent
    {{- with .Values.extraLabels }}{{ toYaml . | nindent 4 }}{{- end }}
  annotations:
    {{- with .Values.extraAnnotations }}{{ toYaml . | nindent 4 }}{{- end }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: datafy-agent
  template:
    metadata:
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/name: datafy-agent
    spec:
      {{- if .Values.datafy.affinity }}
      affinity:
        {{- with .Values.datafy.affinity }}{{ toYaml . | nindent 8 }}{{- end }}
      {{- end }}
      {{- if .Values.datafy.nodeSelector }}
      nodeSelector:
        {{- with .Values.datafy.nodeSelector }}{{ toYaml . | nindent 8 }}{{- end }}
      {{- end }}
      {{- if .Values.datafy.tolerations }}
      tolerations:
        {{- with .Values.datafy.tolerations }}{{ toYaml . | nindent 8 }}{{- end }}
      {{- end }}
      containers:
        - name: core
          args:
            - core
          image: "public.ecr.aws/datafy-io/datafy-agent:{{ .Values.datafy.version }}"
          imagePullPolicy: Always
          securityContext:
            privileged: true
          envFrom:
            - configMapRef:
                name: datafy-agent-envvars
          resources:
            requests:
              cpu: 10m
              memory: 40Mi
        - name: shell
          args:
            - shell
          image: "public.ecr.aws/datafy-io/datafy-agent:{{ .Values.datafy.version }}"
          imagePullPolicy: Always
          securityContext:
            privileged: true
          envFrom:
            - configMapRef:
                name: datafy-agent-envvars
          env:
            - name: DATAFY_TOKEN
              valueFrom:
                secretKeyRef:
                  name: datafy-token
                  key: token
          resources:
            requests:
              cpu: 10m
              memory: 40Mi
      priorityClassName: system-node-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      securityContext:
        fsGroup: 0
        runAsGroup: 0
        runAsNonRoot: false
        runAsUser: 0
      hostPID: true
      hostNetwork: true
