{{- if .Values.ebsCsiProxy.enabled }}
{{- $ctx := . }}
{{- range $hook := list "post-install" "post-upgrade" "pre-delete" }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: datafy-agent-patcher-{{ $hook }}
  namespace: {{ $ctx.Release.Namespace }}
  labels:
    {{- include "datafy-agent.labels" $ctx | nindent 4 }}
  annotations:
    "helm.sh/hook": "{{ $hook }}"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  backoffLimit: 2
  template:
    metadata:
      name: datafy-agent-patcher-{{ $hook }}
      labels:
        {{- include "datafy-agent.labels" $ctx | nindent 8 }}
    spec:
      containers:
        - name: patcher
          image: bitnami/kubectl:latest
          env:
            - name: DATAFY_TOKEN_SECRET_NAME
              value: {{ default "datafy-token" $ctx.Values.agent.externalTokenSecret.name | quote }}
            - name: DATAFY_TOKEN_SECRET_KEY
              value: {{ default "token" $ctx.Values.agent.externalTokenSecret.key | quote }}
            - name: K8S_CSI_NAMESPACE
              value: {{ include "datafy-agent.ebsCsiProxyNamespace" $ctx }}
            - name: K8S_CSI_IMAGE
              value: {{ printf "%s:%s" $ctx.Values.ebsCsiProxy.image.repository $ctx.Values.ebsCsiProxy.image.tag | quote }}
            - name: IAC_URL
              value: {{ $ctx.Values.ebsCsiProxy.iacUrl | default ($ctx.Values.agent.dsoUrl | replace "wss://dso" "https://iac" | replace "ws://dso" "http://iac") }}
            - name: AGENT_MODE
              value: {{ $ctx.Values.agent.mode | lower | quote }}
            - name: HOOK_EVENT
              value: {{ $hook }}
          command:
            - /bin/sh
            - -c
            - |
{{ $ctx.Files.Get "files/patcher-csi.sh" | indent 14 }}
      priorityClassName: system-node-critical
      restartPolicy: Never
      schedulerName: default-scheduler
      serviceAccountName: datafy-csi-patcher-sa
{{- end }}
{{- end }}
