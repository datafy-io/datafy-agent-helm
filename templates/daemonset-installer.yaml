{{- if eq .Values.agent.installStrategy "DaemonSetWithHostInstall" }}
{{- $agentUrl := .Values.agent.dsoUrl | replace "wss://dso" "https://agent" | replace "ws://dso" "http://agent" }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: datafy-agent-installer
  namespace: {{ .Release.Namespace | quote }}
  labels:
  {{- include "datafy-agent.labels" . | nindent 4 }}
  {{- with .Values.extraAnnotations }}
  annotations:
  {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels:
      app: datafy-agent-installer
  template:
    metadata:
      labels:
        app: datafy-agent-installer
        {{- include "datafy-agent.labels" . | nindent 8 }}
    spec:
      {{- if .Values.agent.affinity }}
      affinity:
        {{- with .Values.agent.affinity }}{{ toYaml . | nindent 8 }}{{- end }}
      {{- end }}
      {{- if .Values.agent.nodeSelector }}
      nodeSelector:
        {{- with .Values.agent.nodeSelector }}{{ toYaml . | nindent 8 }}{{- end }}
      {{- end }}
      {{- if .Values.agent.tolerations }}
      tolerations:
        {{- with .Values.agent.tolerations }}{{ toYaml . | nindent 8 }}{{- end }}
      {{- end }}
      containers:
        - name: installer
          image: {{ printf "%s:%s" .Values.agent.image.repository .Values.agent.image.tag }}
          imagePullPolicy: {{ .Values.agent.image.pullPolicy }}
          {{- with .Values.agent.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          args: [ install ]
          env:
          {{- include "agent.extraInstallEnv" . | indent 12 }}
            - name: DATAFY_DSO_URL
              value: {{ .Values.agent.dsoUrl }}
            - name: DATAFY_TOKEN
              valueFrom:
                secretKeyRef:
                  name: datafy-token
                  key: token
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - "sudo nsenter -t 1 -m -- systemctl is-active --quiet datafy-agent"
            initialDelaySeconds: 10
            successThreshold: 1
            periodSeconds: 10
          resources:
            requests:
              cpu: 10m
              memory: 40Mi
      priorityClassName: system-node-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      {{- if .Values.agent.image.imagePullSecrets }}
      imagePullSecrets:
        {{- range .Values.agent.image.imagePullSecrets }}
        - name: {{ . }}
        {{ end }}
      {{- end }}
      hostPID: true
      hostNetwork: true
---
apiVersion: batch/v1
kind: Job
metadata:
  name: datafy-agent-uninstaller
  namespace: {{ .Release.Namespace }}
  labels:
  {{- include "datafy-agent.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  backoffLimit: 2
  template:
    metadata:
      labels:
        app: datafy-agent-uninstaller
        {{- include "datafy-agent.labels" . | nindent 8 }}
    spec:
      {{- if .Values.agent.affinity }}
      affinity:
        {{- with .Values.agent.affinity }}{{ toYaml . | nindent 8 }}{{- end }}
      {{- end }}
      {{- if .Values.agent.nodeSelector }}
      nodeSelector:
        {{- with .Values.agent.nodeSelector }}{{ toYaml . | nindent 8 }}{{- end }}
      {{- end }}
      {{- if .Values.agent.tolerations }}
      tolerations:
        {{- with .Values.agent.tolerations }}{{ toYaml . | nindent 8 }}{{- end }}
      {{- end }}
      containers:
        - name: uninstaller
          image: {{ printf "%s:%s" .Values.agent.image.repository .Values.agent.image.tag }}
          imagePullPolicy: {{ .Values.agent.image.pullPolicy }}
          {{- with .Values.agent.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          args: [ uninstall ]
          env:
            - name: DATAFY_DSO_URL
              value: {{ .Values.agent.dsoUrl }}
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - "sudo nsenter -t 1 -m -- sh -c '! systemctl is-active --quiet datafy-agent'"
            initialDelaySeconds: 10
            successThreshold: 1
            periodSeconds: 3
          resources:
            requests:
              cpu: 10m
              memory: 40Mi
      priorityClassName: system-node-critical
      restartPolicy: OnFailure
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      {{- if .Values.agent.image.imagePullSecrets }}
      imagePullSecrets:
        {{- range .Values.agent.image.imagePullSecrets }}
        - name: {{ . }}
        {{ end }}
      {{- end }}
      hostPID: true
      hostNetwork: true
{{- end }}
